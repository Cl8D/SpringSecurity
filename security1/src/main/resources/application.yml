server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/security?serverTimezone=Asia/Seoul
    username: jw
    password: jwjwjw


  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google: # /oauth2/authorization/google ? ??? ???? ??.
            client-id: 169291646771-olb05fpt9eb4bdv27ii1kbgnstb90sld.apps.googleusercontent.com
            client-secret: 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
            scope:
              - email
              - profile

          facebook:
            client-id: 2149138591929244
            client-secret: 721f3240c1bbf858f062089ceecd57a1
            scope:
              - email
              - public_profile

          # ???? OAuth2.0 ?? ????? ???? provider ??? ????.
          # ????? ???, ?? ???? ??? ????.
          naver:
            client-id: 7OX5sR9Y0Vxxn34N71Nz
            client-secret: Xa_g6qXsVT
            scope:
              - name
              - email
              - profile_image
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        # naver not regist default provider, so we should regist
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # to show naver login page
            token-uri: https://nid.naver.com/oauth2.0/token # to get token url
            user-info-uri: https://openapi.naver.com/v1/nid/me # to get user profile
            user-name-attribute: response # return user info json, key=response